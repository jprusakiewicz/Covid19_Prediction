mlflow:
  tracking_uri: "http://localhost:5000"

preprocessing:
  additional_features: True
  sequence_length: 27
  use_scaler: False
  train_test_split:
    test_size: 0.3 # do not change
    random_state: 420

model:
  model_library: "keras"
  random_state: 420
  epochs: 40
  layers:
    - type: "SimpleRNN"
      bidirectional: true
      params:
        units: 16
        input_shape: [1, 1]
        activation: "relu"
    - type: "Dense"
      params:
        units: 8
        activation: "relu"
    - type: "Dense"
      params:
        units: 4
        activation: "relu"
    - type: "Dense"
      params:
        units: 1
  early_stopping:
    monitor: "mean_absolute_error" # try also "loss"
    patience: 5
    mode: "min"

#model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 10
#    max_samples: 1.0
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 10
#    max_samples: 2.0
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    max_samples: 3.0
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    max_samples: 4.0
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    max_samples: 4.0
#    max_samples: 5.0
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 20
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 30
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 40
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 50
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 200
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 300
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 400
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 500
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 600
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 700
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 800
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 900
# model:
#  model_library: "sklearn"
#  type: "BaggingRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 1000

# model:
#  model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 10
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 20
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 30
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 40
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 50
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 60
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 70
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 80
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 90
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100
#model:
#  model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 200
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 300
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 400
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 500
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 600
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 700
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 800
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 900
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 1000
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    criterion: "squared_error"
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    criterion: "absolute_error"
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    criterion: "friedman_mse"
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    criterion: "friedman_mse"
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    min_weight_fraction_leaf: 1.0
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    min_weight_fraction_leaf: 2.0
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    min_weight_fraction_leaf: 3.0
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    min_weight_fraction_leaf: 4.0
# model:
 # model_library: "sklearn"
#  type: "RandomForestRegressor"
#  params:
#    random_state: 420
#    n_jobs: -1
#    n_estimators: 100 #default
#    min_weight_fraction_leaf: 5.0
#

#
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    criterion: "friedman_mse"
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    criterion: "absolute_error"
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    criterion: "poisson"
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    splitter: "random"
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    max_features: "auto"
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    max_features: "sqrt"
# model:
# model_library: "sklearn"
#   type: "DecisionTreeRegressor"
#   params:
#    random_state: 420
#    max_features: "log2"

# model:
#   model_library: "sklearn"
#   type: "KernelRidge"
#   params:
#    alpha: 1.0
# model:
#   model_library: "sklearn"
#   type: "KernelRidge"
#   params:
#    alpha: 0.0001
# model:
#   model_library: "sklearn"
#   type: "KernelRidge"
#   params:
#    alpha: 0.001
# model:
#   model_library: "sklearn"
#   type: "KernelRidge"
#   params:
#    alpha: 0.01
# model:
#   model_library: "sklearn"
#   type: "KernelRidge"
#   params:
#    alpha: 0.1
# model:
#   model_library: "sklearn"
#   type: "KernelRidge"
#   params:
#    alpha: 0.5

# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     alpha: 1.0
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     alpha: 0.0001
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     alpha: 0.001
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     alpha: 0.01
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     alpha: 0.1
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     alpha: 0.5
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     n_restarts_optimizer: 1
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     n_restarts_optimizer: 2
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     n_restarts_optimizer: 3
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     n_restarts_optimizer: 4
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     n_restarts_optimizer: 5
# model:
#   model_library: "sklearn"
#   type: "GaussianProcessRegressor"
#   params:
#     normalize_y: True


# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    loss: "squared_error"
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    loss: "absolute_error"
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    loss: "huber"
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    loss: "quantile"
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.1
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.2
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.3
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.4
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.5
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.6
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.7
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.8
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 0.9
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 1.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 2.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 3.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 4.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 5.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 6.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 7.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 8.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 9.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 10.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 50.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    learning_rate: 100.0
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 0.0 # if <1 then Stochastic Gradient Boosting
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 0.1 # if <1 then Stochastic Gradient Boosting
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 0.5 # if <1 then Stochastic Gradient Boosting
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 1 
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 2
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 3
# model:
#  model_library: "sklearn"
#  type: "GradientBoostingRegressor"
#  params:
#    subsample: 10
